# В большой текстовой строке подсчитать количество встречаемых слов и вернуть 10 самых частых.
# Не учитывать знаки препинания и регистр символов.
# За основу возьмите любую статью из википедии или из документации к языку.
# (Может помочь метод translate из модуля string)

some_text = """Синтаксис, правила написания кода в Python
Одним из ключевых моментов PEP 8 является то, что код читается гораздо чаще, чем пишется. Приведенные здесь рекомендации предназначены для улучшения читабельности кода и обеспечения его согласованности с широким спектром кода Python. Как говориться в Дзене Python "Читаемость имеет значение".

Руководство по стилю о последовательности:

Согласованность с PEP 8 по стилю кодирования очень важна.
Согласованность внутри проекта важнее.
Согласованность внутри одного модуля или функции является наиболее важной.
Однако, иногда рекомендации по стилю просто не применимы. В случае сомнений используйте свое решение. Посмотрите на другие примеры и решите, что выглядит лучше. И не стесняйтесь спрашивать! В общем, не нарушайте обратную совместимость только из за соблюдения PEP 8!

Некоторые другие веские причины игнорировать это руководство:

Применение PEP 8 в проекте сделает код менее читабельным, даже для тех, кто привык читать код, который следует этому PEP.
Рассматриваемый код похож по стилю с ранее написанным кодом, который также нарушает PEP 8 (возможно, по историческим причинам) - хотя это возможность привести чужой код в порядок.
Рассматриваемый код предшествует введению руководства, и нет никаких других причин для изменения этого кода.
Когда код может остаться совместимым со старыми версиями Python, который не поддерживает функции, рекомендованную в PEP.
Разметка кода Python, PEP 8
Отступы в коде. TAB или пробелы? Максимальная длина строки с кодом. Разрыв строки до или после двоичного оператора? Пустые строки. Кодировка файла с кодом. Импорт. Кавычки в строках.

Пробелы в выражениях и операторах языка Python
Раздражители и другие рекомендации по пробелам в выражениях и операторах

Когда использовать запятые в коде на Python
Конечные запятые обычно необязательны, за исключением того, что они обязательны при создании кортежа из одного элемента

Комментарии в коде языка Python
Комментарии, которые противоречат коду, хуже, чем отсутствие комментариев. Всегда делайте приоритет обновления комментариев при изменении кода!

Соглашения об именах в Python
Соглашения об именах библиотеки Python немного беспорядочные, поэтому мы никогда не получим полное согласование. Тем не менее, вот рекомендуемые в настоящее время стандарты именования.

Рекомендации по программированию на Python
Код должен быть написан так, чтобы не зависеть от разных реализаций языка (PyPy, Jython, IronPython, Pyrex, Psyco и пр.).

 """
def ten_popular(text: str) -> list[str]:
    delete = ".,!?;:-[]{}()="
    for i in delete:
        text = text.replace(i, "")
    text = text.lower()
    return sorted(set(text.split()), key=lambda x: text.count(x))[-10:]


print(ten_popular(some_text))